@page "/Login"
@using System.ComponentModel.DataAnnotations
@using InputType = MudBlazor.InputType

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized Context="NotAuth">
        <MudGrid Justify="Justify.Center">
            <MudItem xs="6" Class="my-7">
                    <MudPaper Elevation="14" Class="d-flex align-center justify-center py-8">
                    <table>
                        <tr>
                            <td>
                                <MudText Typo="Typo.h4" Align="Align.Center" Class="ma-5">Sign In</MudText>
                                <MudIcon Style="font-size: 10rem; margin: 0 auto 10px; display: block;" Icon="@Icons.Material.Filled.Person" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <EditForm Model="@LoginFormModel" OnValidSubmit="OnValidLoginFormSubmit">
                                    <DataAnnotationsValidator/>
            
                                    <MudTextField Label="Username" Class="mt-3" @bind-Value="LoginFormModel.Username" For="@(() => LoginFormModel.Username)" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Person"/>
                                    <MudTextField Label="Password" Class="mt-3" @bind-Value="LoginFormModel.Password" For="@(() => LoginFormModel.Password)" InputType="@PasswordInputType" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordVisibiltyState"/>
                                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Class="py-2 mt-4">Login</MudButton>

                                    <MudText Typo="Typo.body2" Align="Align.Center" Class="my-4" FullWidth="true" Color="Color.Error">@ErrorMessage</MudText>
                                    <MudDivider/>
                                    <a href="/Register" class="text-center register-href">Don't have an account? Register here </a>
                                </EditForm>
                            </td>
                        </tr>
                    </table>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </NotAuthorized>
    <Authorized>
        <h1>You are already logged in.</h1>
    </Authorized>
</AuthorizeView>

@code {
    
    // Variables for handling the state and behaviour of the show password button.
    private InputType PasswordInputType = InputType.Password;
    private string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    private bool IsPasswordVisible;

    private void TogglePasswordVisibiltyState() {
        if (IsPasswordVisible) {
            IsPasswordVisible = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInputType = InputType.Password;
        } else {
            IsPasswordVisible = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInputType = InputType.Text;
        }
    }

    // Class that contains the input data of the login form.
    public class LoginForm {

        [Required]
        public string Username { get; set; }

        [Required]
        public string Password { get; set; }
        
    }

    private LoginForm LoginFormModel = new LoginForm();
    private string ErrorMessage;

    private async Task OnValidLoginFormSubmit(EditContext context) {
        //TO DO:
    }
}
