@page "/Actors"
@using SEP6.Data.Actors;
@using SEP6.Models;
@inject IActorService ActorService
@inject NavigationManager NavigationManager

<h3>Popular actors</h3>
<MudGrid>

    <MudItem xs="12" md="2">

    </MudItem>
    <MudItem xs="12" md="10">
            @if (actorList?.Actors != null)
            {
                <MudGrid>               
                    @foreach (var actor in actorList.Actors)
                    {
                        <MudItem xs="6" sm="4" md="3" xl="2">
                        <MudCard Width="200px" style="cursor: pointer;" @onclick="() => GoToActorDetails(actor.Id)">
                                <MudCardMedia  Image="@GetActorPoster(actor.ProfilePath)" Height="300"  />
                                <MudCardContent>
                                     <MudText Typo="Typo.h6">@actor.Name</MudText>
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                    }
                </MudGrid>
            }
            @if (actorList?.CurrentPage < actorList?.TotalPages)
            {
                <div class="text-center mt-4">
                    <button class="btn btn-primary" @onclick="LoadNextPage">Load More</button>
                </div>
            }
    </MudItem>
</MudGrid>

@code {

    private int currentPage = 1;
    private ListOfActors actorList;

    protected override async Task OnInitializedAsync()
    {
        actorList = new ListOfActors();
        await LoadActors();
    }

    public string GetActorPoster(string path)
    {
        if (string.IsNullOrEmpty(path))
        {
            return "Images/defaultUserImage.jpg";
        }
        string actorPoster = "http://image.tmdb.org/t/p/w500/";
        return actorPoster + path;
    }

    private async Task LoadActors()
    {
        actorList = await ActorService.GetPopularActors(currentPage);
    }

    private async Task LoadNextPage()
    {
        currentPage++;
        var nextPageActors = await ActorService.GetPopularActors(currentPage);
        actorList.Actors.AddRange(nextPageActors.Actors);
        StateHasChanged();
    }

    private void GoToActorDetails(int actorId)
    {
        NavigationManager.NavigateTo($"/ActorsDetails/{actorId}");
    }
}
