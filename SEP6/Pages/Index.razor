@page "/"
@using SEP6.Data.Movies;
@using SEP6.Models;
@inject IMovieService MovieService
@inject NavigationManager NavigationManager
<PageTitle>Index</PageTitle>

<div class="container mt-5">
    @if (movieList.Movies != null)
    {
        <h1 class="text-center mb-4">Top Movies</h1>
        <div class="d-flex justify-content-center">
            <div id="moviesCarousel" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner">
                    @for (var i = 0; i < Math.Ceiling((double)movieList.Movies.Count / 12); i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <div class="row">
                                @for (var j = i * 12; j < Math.Min((i * 12) + 12, movieList.Movies.Count); j++)
                                {
                                    <div class="col-md-2">
                                        <a href="/MoviesDetails/@movieList.Movies[j].Id" @onclick="() => MovieSelected(movieList.Movies[j].Id)" class="text-decoration-none">
                                            <div class="text-center">
                                                <img src="@GetMoviePoster(movieList.Movies[j].PosterRoute)" class="img-fluid rounded-lg" alt="Movie @(j + 1)">
                                                <h5 class="mt-3">@movieList.Movies[j].Title</h5>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="carousel-controls">
            <a class="carousel-control-prev" href="#moviesCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#moviesCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    }
</div>




@code {
    private ListOfMovies movieList = new ListOfMovies();
    private int currentPage = 1;

    protected override async Task OnInitializedAsync()
    {
        movieList = await MovieService.GetMoviesByRating(currentPage);

        for (int page = 2; page <= 5; page++) // Fetch additional 4 pages
        {
            var additionalMovies = await MovieService.GetMoviesByRating(page);
            movieList.Movies.AddRange(additionalMovies.Movies);
        }
    }

    public async Task MovieSelected(int id)
    {
        MovieService.SetMovieId(id);
        StateHasChanged();
    }

    public string GetMoviePoster(string path)
    {
        string moviePoster = "http://image.tmdb.org/t/p/w500/";
        return moviePoster + path;
    }
}
